@use 'sass:math';

$default-min-bp: 320px;
$default-max-bp: 1240px;

@function round($number, $decimals: 0) {
    $n: 1;
    @if $decimals > 0 {
        @for $i from 1 through $decimals {
            $n: $n * 10;
        }
    }
    @return math.div(math.round($number * $n), $n);
}

@function px-to-rem($px) {
    $rems: math.div($px, 16px) * 1rem;
    @return $rems;
}

@function clamp-gen($min-size, $max-size, $min-breakpoint: $default-min-bp, $max-breakpoint: $default-max-bp, $unit: vw) {
    $slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
    $slope-to-unit: round($slope * 100, 2);
    $intercept-rem: round(px-to-rem($min-size - $slope * $min-breakpoint), 2);
    $min-size-rem: round(px-to-rem($min-size), 2);
    $max-size-rem: round(px-to-rem($max-size), 2);
    @return clamp(#{$min-size-rem}, #{$slope-to-unit}#{$unit} + #{$intercept-rem}, #{$max-size-rem});
}

@mixin flex($orientation:row) {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    flex-direction: $orientation;
}

@mixin flexAlign($justify-content, $align-items) {
    @if $justify-content ==s {
        justify-content: flex-start;
    }

    @else if $justify-content ==c {
        justify-content: center;
    }

    @else if $justify-content ==e {
        justify-content: flex-end;
    }

    @else if $justify-content ==sb {
        justify-content: space-between;
    }

    @else if $justify-content ==sa {
        justify-content: space-around;
    }

    @else if $justify-content ==se {
        justify-content: space-evenly;
    }

    @if $align-items ==s {
        align-items: flex-start;
    }

    @else if $align-items ==c {
        align-items: center;
    }

    @else if $align-items ==e {
        align-items: flex-end;
    }

    @else if $align-items ==st {
        align-items: stretch;
    }
}